// <auto-generated />
using System;
using CollisiumDataAccess.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CollisiumDataAccess.Migrations
{
    [DbContext(typeof(ExperimentDbContext))]
    partial class ExperimentDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.12");

            modelBuilder.Entity("CollisiumDataAccess.Entities.Experiment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstStrategy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SecondStrategy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Experiments");
                });

            modelBuilder.Entity("CollisiumDataAccess.Entities.ExperimentCondition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CardsOrder")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ExperimentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ExperimentId");

                    b.ToTable("ExperimentConditions");
                });

            modelBuilder.Entity("CollisiumDataAccess.Entities.ExperimentCondition", b =>
                {
                    b.HasOne("CollisiumDataAccess.Entities.Experiment", null)
                        .WithMany()
                        .HasForeignKey("ExperimentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
